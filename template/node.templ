package template

import (
	"fmt"
	"translang/dto"
)

type NodeModalProps struct {
	dto.TranslationNode
	Values []struct {
		dto.TranslationNodeValue
		UpdateValueURL string
	}
}

templ NodeModal(props NodeModalProps) {
	<div hx-swap-oob="beforebegin:#nodes">
		<dialog id="node_modal" class="modal" hx-get="/node" hx-select-oob="#all_nodes" hx-swap="none" hx-trigger="close delay:250ms" hx-on:htmx:load="this.showModal()">
			<form method="dialog" class="modal-backdrop">
				<button>close</button>
			</form>
			<div class="modal-box flex flex-col items-center w-full max-w-4xl">
				<form method="dialog">
					<button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">âœ•</button>
				</form>
				<div class="mt-8 gap-y-8 flex flex-col">
					<h2 class="text-xl mb-2">{ props.CopyKey }</h2>
					<p class="mb-4">{ props.SourceText }</p>
					<div class="overflow-x-auto">
						<table class="table">
							<thead>
								<tr>
									<th class="w-44">Language</th>
									<th>Translation</th>
								</tr>
							</thead>
							<tbody>
								for i, value := range props.Values {
									<tr>
										<th class="font-normal w-44">{ value.CopyLanguage }</th>
										<th>
											<form id={ fmt.Sprintf("update-%d", i) } hx-patch={ value.UpdateValueURL } hx-swap="none">
												<textarea name="text" minlength="1" class="font-normal textarea" placeholder="Enter translation" lang={ value.CopyLanguage } required>{ value.CopyText }</textarea>
											</form>
										</th>
										<th>
											<button class="btn btn-soft btn-primary" form={ fmt.Sprintf("update-%d", i) }>Save</button>
										</th>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</dialog>
	</div>
}

type NodeRowProp struct {
	DetailsUrl string
	SourceText string
	CopyKey    string
}

templ NodeRow(props NodeRowProp) {
	<tr>
		<td>
			{ props.CopyKey }
		</td>
		<td>
			{ props.SourceText }
		</td>
		<td>
			<a class="btn btn-soft btn-primary" hx-swap="none" hx-get={ props.DetailsUrl } href={ templ.URL(props.DetailsUrl) }>Details</a>
		</td>
	</tr>
}

type NodesProp struct {
	Nodes []NodeRowProp
}

templ Nodes(props NodesProp) {
	@Base(BaseProps{
		Title: "Translang - Nodes",
	}) {
		<div id="nodes">
			<div class="overflow-x-auto bg-base-200">
				<table class="table">
					<thead>
						<tr>
							<th>Key</th>
							<th>Source</th>
							<th></th>
						</tr>
					</thead>
					<tbody id="all_nodes">
						for _, node := range props.Nodes {
							@NodeRow(node)
						}
					</tbody>
				</table>
			</div>
		</div>
	}
}
